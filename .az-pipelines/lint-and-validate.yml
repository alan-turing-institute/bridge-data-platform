trigger:
- master

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  helm_version: '2.15.0'
  jupyterhub_chart_version: '0.8.2'
  kubernetes_cluster_name: 'bridge-data-cluster'
  kubernetes_cluster_resource_group: 'bridge-data-platform'
  kubernetes_namespace: 'bridgehub'
  kubernetes_version: '1.18.0'
  service_connection: 'bridge-data-platform-scn'

jobs:
- job: LintAndValidateHelmChart
  steps:
  - task: HelmInstaller@1
    displayName: 'Install Helm version $(HELM_VERSION)'
    inputs:
      helmVersionToInstall: $(HELM_VERSION)

  - task: HelmDeploy@0
    displayName: 'Initialise helm'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: $(SERVICE_CONNECTION)
      azureResourceGroup: $(KUBERNETES_CLUSTER_RESOURCE_GROUP)
      kubernetesCluster: $(KUBERNETES_CLUSTER_NAME)
      namespace: $(KUBERNETES_NAMESPACE)
      command: 'init'
      arguments: '--client-only'
      tillerNamespace: 'kube-system'

  - task: Bash@3
    displayName: 'Install kubeval'
    inputs:
      targetType: 'inline'
      script: |
        wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
        tar xf kubeval-linux-amd64.tar.gz
        sudo cp kubeval /usr/local/bin

  - task: AzureKeyVault@1
    displayName: 'Pull Secrets from Key Vault'
    inputs:
      azureSubscription: 'bridge-data-platform-scn'
      KeyVaultName: 'bridge-data-keyvault'
      SecretsFilter: 'proxySecretToken, githubClientId, githubClientSecret'

  - task: Bash@3
    displayName: 'Create .secret/ directory'
    inputs:
      targetType: 'inline'
      script: 'mkdir -p .secret'

  - task: Bash@3
    displayName: 'Generate .secret/config.yaml'
    inputs:
      targetType: 'inline'
      script: |
        sed -e "s/<proxySecretToken>/$(proxySecretToken)/" \
        -e "s/<githubClientId>/$(githubClientId)/" \
        -e "s/<githubClientSecret>/$(githubClientSecret)/" \
        config/config-template.yaml > .secret/config.yaml

  - task: CmdLine@2
    displayName: 'Template IP address into JupyterHub config'
    inputs:
      script: |
        JUPYTERHUB_IP=$( \
          kubectl -n $(KUBERNETES_NAMESPACE) get svc proxy-public | \
          awk '{ print $4}' | tail -n 1 \
        )
        sed -i -e "s/<jupyterhubIp>/${JUPYTERHUB_IP}/" .secret/config.yaml

  - task: Bash@3
    displayName: 'Add JupyterHub helm chart repository'
    inputs:
      targetType: 'inline'
      script: |
        helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
        helm repo update

  - task: Bash@3
    displayName: 'Run Helm Lint'
    inputs:
      targetType: 'inline'
      script: |
        helm lint jupyterhub/jupyterhub --version $(JUPYTERHUB_CHART_VERSION) -f .secret/config.yaml
